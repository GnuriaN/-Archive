/**************************************************************************************************
Название проекта: ExerciseCrypt
    
Задание: Написать консольную программу на C#, которая будет запрашивать у пользователя строку
из консоли, шифровать её (используй MD5), выводить результат в консоль, ожидать нажатия любой 
клавиши и после этого завершать своё выполнение. 

Дополнительно: 
- Использование контроля версий.
Второй шаг: 
- Дать пользователю возможность выбрать шифрование из MD5, SHA256, SHA384, SHA512. Для 
  простоты можно "ассоциировать" каждый из алгоритмов с каким-то числом, само собой разумеется,
  что программа должена сообщить эти ассоциации пользователю.
Шаг третий:
- Используя тип Tuple для хранения информации о каждом доступном варианте шифрования, его 
  описании (текст выводимый пользователю) и способе выбора (что пользователь должен ввести, 
  что бы выбрать этот вариант шифрования). Соответственно, будет массив или список (без разницы, 
  что именно) вариантов. Выводить надо будет в цикле, и никакого switch, естественно.
Шаг четвертый:
- Замени Tuple на класс разработаный класс CypherInfo, процесс шифрования должен быть вынесен
  в отдельный класс, как и CypherInfo. Класс отвечающий за шифрование должен иметь метод 
  возвращающий список описаний доступных вариантов шифрований.
Шаг пятый:
 - Добавить 3-й проект в решение Unit Test Project. Написать метода тестирования в этом проекте
   по одному для каждого метода шифрования.
**************************************************************************************************
http://www.md5calc.com
139b4974af77ddb8e72bf344f0e658ba = MD5("Hello word")
aea1d1146a00e1c55e49c7837c224ecfb76ca0337fd4bb6dc09e892ca0190119 = SHA256("Hello word")
40dbfcc70f6a797360a6180b613a817c269972f86d622341cd3ca7b7f5f195378750c461292565c270a8627f13e4525c = SHA384("Hello word")
e4873cf35753072cee0da8f8f287d8472ab47ec195eb68971c449c7039232ace134f3369c83e64c005a1609a9d8d2c84908d9f8d3c12281e8ce4db5d36fe0222 = SHA512("Hello word")
**************************************************************************************************/

using System;


namespace ExerciseCrypt
{
    internal class Program
    {
        private static void Main()
        {
            // Объект выбора типа шифрования
            int metodHash;
            // Объект для хранения количества методов шифрования
            const int countMetodHash = 4;
            // Объект для хранения информация о метоте HASH
            var currentCypher = MakeHashAlgorithm.GetCypherMethods();
            //Запрос строки для хэширования из консоли
            Console.Write("Введите строку для получения HASH: ");
            // Объект для храннеия исходной строки
            var inputText = Console.ReadLine();
            // Выводим варианты получения HASP
            for (var count = 0; count < countMetodHash; count++)
            {
                Console.WriteLine(currentCypher[count].Description);
            }
            
            // Проверка на коректный ввод до тех, пор пока выбор не лежит в заданных приделах
            do
            {
                Console.Write("Выбор:");
                if (int.TryParse(Console.ReadLine(), out metodHash)) ;
            }
            // Кажется я разучился строить логические выражения... 
            while (!((metodHash > 0) && (metodHash <= countMetodHash)));

            // Получение результата работы выбранного алгоритма получения HASP
            // Тут некрасиво получается metodHash имеет диапозон от 1 до 4, а count arrayOptionMetodHash от 0 до 3х.
            // Объект для хранения результата
            var resultText = MakeHashAlgorithm.GetHash(currentCypher[metodHash - 1].Hash, inputText);

            // Вывод результата
            Console.Write("Результат шифрования: ");
            Console.WriteLine(resultText);

            // Ожидания нажания любой клавиши 
            Console.WriteLine("Press any key...");
            Console.ReadKey();
        }
    }
}